; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "modharbour"
#define MyAppVersion "2.0"
#define MyAppPublisher "FiveTech Software (c) 2019,2020"
#define MyAppURL "http://www.modharbour.org"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{B86542BD-ECFF-4834-B9D6-62771476D533}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={localappdata}\{#MyAppName}
DisableDirPage=no
DefaultGroupName={#MyAppName}
LicenseFile=..\..\..\LICENSE
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=modharbour
SetupIconFile=..\..\..\docs\favicon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "armenian"; MessagesFile: "compiler:Languages\Armenian.isl"
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
Name: "catalan"; MessagesFile: "compiler:Languages\Catalan.isl"
Name: "corsican"; MessagesFile: "compiler:Languages\Corsican.isl"
Name: "czech"; MessagesFile: "compiler:Languages\Czech.isl"
Name: "danish"; MessagesFile: "compiler:Languages\Danish.isl"
Name: "dutch"; MessagesFile: "compiler:Languages\Dutch.isl"
Name: "finnish"; MessagesFile: "compiler:Languages\Finnish.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"
Name: "hebrew"; MessagesFile: "compiler:Languages\Hebrew.isl"
Name: "icelandic"; MessagesFile: "compiler:Languages\Icelandic.isl"
Name: "italian"; MessagesFile: "compiler:Languages\Italian.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"
Name: "norwegian"; MessagesFile: "compiler:Languages\Norwegian.isl"
Name: "polish"; MessagesFile: "compiler:Languages\Polish.isl"
Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"
Name: "slovak"; MessagesFile: "compiler:Languages\Slovak.isl"
Name: "slovenian"; MessagesFile: "compiler:Languages\Slovenian.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"
Name: "turkish"; MessagesFile: "compiler:Languages\Turkish.isl"
Name: "ukrainian"; MessagesFile: "compiler:Languages\Ukrainian.isl"

[Files]
Source: "..\..\..\windows\win64\mod_harbour.so"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\..\..\windows\win64\libharbour.dll"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Code]
const
  TOP     = 200;
  LEFT    = 200;
  BTNLEFT = 120;

var
  ServersPage: TInputQueryWizardPage;
  ApacheCheckBox, XamppCheckBox, IISCheckBox: TNewCheckBox;
  ApacheEdit, XamppEdit, IISEdit: TEdit;
  ApacheButton, XamppButton, IISButton: TButton;
  ApacheInstallButton, XamppInstallButton, IISInstallButton: TButton;
  ApachePath, XamppPath, IISPath: string;
  cTmpFile, Parameters: string;
  retCode: integer;
  cHtml: AnsiString;

function Wide( str: AnsiString ):String;
var
  i : Integer;
  iChar : Integer;
  outString : String;
begin
  outString :='';
  for i := 1 to Length( str ) do
  begin
    outString := outString + Chr( Ord( str[ i ] ) ) + Chr( 0 );
  end;

  Result := outString;
end;

procedure ApacheClick( sender: TObject );
begin
  ApacheEdit.enabled   := ( sender as TNewCheckBox ).checked;
  ApacheButton.enabled := ( sender as TNewCheckBox ).checked;
  ApacheInstallButton.enabled := ( sender as TNewCheckBox ).checked;
end;

procedure ApacheButtonClick( sender: TObject );
begin
  if BrowseForFolder( 'Select Apache path', ApachePath, true ) then
    ApacheEdit.Text := ApachePath;
end;

procedure XamppButtonClick( sender: TObject );
begin
  if BrowseForFolder( 'Select Xampp path', XamppPath, true ) then
    XamppEdit.Text := XamppPath;
end;

procedure IISButtonClick( sender: TObject );
begin
  if BrowseForFolder( 'Select IIS path', IISPath, true ) then
    IISEdit.Text := IISPath;
end;

procedure XamppClick( sender: TObject );
begin
  XamppEdit.enabled   := ( sender as TNewCheckBox ).checked;
  XamppButton.enabled := ( sender as TNewCheckBox ).checked;
  XamppInstallButton.enabled := ( sender as TNewCheckBox ).checked;
end;

procedure IISClick( sender: TObject );
begin
  IISEdit.enabled   := ( sender as TNewCheckBox ).checked;
  IISButton.enabled := ( sender as TNewCheckBox ).checked;
  IISInstallButton.enabled := ( sender as TNewCheckBox ).checked;
end;

procedure AddServersPage();
begin
  ServersPage := CreateInputQueryPage( wpWelcome, 'Please select the web server(s) to use',
                                       'This installer helps you to install the web server(s) if you have not installed them yet...', 
                                       'mod_harbour supports Apache, Xampp and Windows IIS');

  ApacheCheckBox := TNewCheckBox.Create( ServersPage );
  with ApacheCheckBox do
  begin
    Parent   := ServersPage.Surface;
    Top      := ApacheCheckBox.Top + 50; 
    Left     := ApacheCheckBox.Left + 20; 
    Caption  := 'Apache';
    OnClick  := @ApacheClick;
    TabOrder := 1;
  end;

  ApacheEdit := TEdit.Create( ServersPage );
  with ApacheEdit do
  begin
    Parent   := ServersPage.Surface;
    Top      := ApacheCheckBox.Top;
    Left     := ApacheCheckBox.Left + 100;
    Width    := 200; 
    Height   := ScaleY( 25 );
    Text     := 'c:\Apache24';
    Enabled  := ApacheCheckBox.checked;
    TabOrder := 2;
  end;

  ApacheButton := TButton.Create( ServersPage );
  with ApacheButton do
  begin
    Parent   := ServersPage.Surface;
    Top      := ApacheEdit.Top - 2;
    Left     := ApacheEdit.Width + 140;
    Width    := 70;
    Height   := 25;
    Caption  := '&Browse...'
    OnClick  := @ApacheButtonClick;
    TabOrder := 3;
  end;

  ApacheInstallButton := TButton.Create( ServersPage );
  with ApacheInstallButton do
  begin
    Parent   := ServersPage.Surface;
    Top      := ApacheEdit.Top - 2;
    Left     := ApacheButton.Left + ApacheButton.Width + 10;
    Width    := 80;
    Height   := 25;
    Caption  := '&Install...'
    // OnClick  := @ApacheButtonClick;
    TabOrder := 4;
  end;

  XamppCheckBox := TNewCheckBox.Create( ServersPage );
  with XamppCheckBox do
  begin
    Parent   := ServersPage.Surface;
    Top      := ApacheCheckBox.Top + 40; 
    Left     := ApacheCheckBox.Left; 
    Caption  := 'Xampp';
    OnClick  := @XamppClick;
    TabOrder := 4;
  end;    

  XamppEdit := TEdit.Create( ServersPage );
  with XamppEdit do
  begin
    Parent   := ServersPage.Surface;
    Top      := XamppCheckBox.Top;
    Left     := ApacheCheckBox.Left + 100;
    Width    := 200; 
    Height   := ScaleY( 25 );
    TabOrder := 1;
    Text     := 'c:\xampp';
    Enabled  := XamppCheckBox.checked;
    TabOrder := 5;
  end;

  XamppButton := TButton.Create( ServersPage );
  with XamppButton do
  begin
    Parent   := ServersPage.Surface;
    Top      := XamppEdit.Top - 2;
    Left     := XamppEdit.Width + 140;
    Width    := 70;
    Height   := 25;
    Caption  := '&Browse...'
    OnClick  := @XamppButtonClick;
    TabOrder := 6;
  end;

  XamppInstallButton := TButton.Create( ServersPage );
  with XamppInstallButton do
  begin
    Parent   := ServersPage.Surface;
    Top      := XamppEdit.Top - 2;
    Left     := XamppButton.Left + XamppButton.Width + 10;
    Width    := 80;
    Height   := 25;
    Caption  := '&Install...'
    // OnClick  := @ApacheButtonClick;
    TabOrder := 4;
  end;

  IISCheckBox := TNewCheckBox.Create( ServersPage );
  with IISCheckBox do
  begin
    Parent   := ServersPage.Surface;
    Top      := XamppCheckBox.Top + 40; 
    Left     := ApacheCheckBox.Left; 
    Caption  := 'Microsoft IIS';
    OnClick  := @IISClick;
    TabOrder := 7;
  end;    

  IISEdit := TEdit.Create( ServersPage );
  with IISEdit do
  begin
    Parent   := ServersPage.Surface;
    Top      := IISCheckBox.Top;
    Left     := ApacheCheckBox.Left + 100;
    Width    := 200; 
    Height   := ScaleY( 25 );
    TabOrder := 1;
    Text     := 'c:\inetpub';
    Enabled  := IISCheckBox.checked;
    TabOrder := 8;
  end;

  IISButton := TButton.Create( ServersPage );
  with IISButton do
  begin
    Parent   := ServersPage.Surface;
    Top      := IISEdit.Top - 2;
    Left     := IISEdit.Width + 140;
    Width    := 70;
    Height   := 25;
    Caption  := '&Browse...'
    OnClick  := @IISButtonClick;
    TabOrder := 9;
  end;

  IISInstallButton := TButton.Create( ServersPage );
  with IISInstallButton do
  begin
    Parent   := ServersPage.Surface;
    Top      := IISEdit.Top - 2;
    Left     := IISButton.Left + IISButton.Width + 10;
    Width    := 80;
    Height   := 25;
    Caption  := '&Install...'
    // OnClick  := @ApacheButtonClick;
    TabOrder := 4;
  end;

  cTmpFile := ExpandConstant( '{tmp}\info.txt' ); 
  Parameters := '(Invoke-WebRequest "localhost") >' + cTmpFile;    

  if Exec( 'powershell.exe', Parameters, '', SW_HIDE, ewWaitUntilTerminated, retCode ) and FileExists( cTmpFile ) then
  begin  
    LoadStringFromFile( cTmpFile, cHtml );
    ApacheCheckBox.checked := ( Pos( Wide( 'Apache' ), cHtml ) <> 0 );
    ApacheButton.enabled   := ( Pos( Wide( 'Apache' ), cHtml ) <> 0 );
    ApacheInstallButton.enabled := ( Pos( Wide( 'Apache' ), cHtml ) <> 0 );
    XamppCheckBox.checked  := ( Pos( Wide( 'Xampp' ), cHtml ) <> 0 );
    XamppButton.enabled    := ( Pos( Wide( 'Xampp' ), cHtml ) <> 0 );
    XamppInstallButton.enabled  := ( Pos( Wide( 'Xampp' ), cHtml ) <> 0 );
    IISCheckBox.checked    := ( Pos( Wide( 'IIS' ), cHtml ) <> 0 );
    IISButton.enabled      := ( Pos( Wide( 'IIS' ), cHtml ) <> 0 );
    IISInstallButton.enabled := ( Pos( Wide( 'IIS' ), cHtml ) <> 0 );
  end;

  DeleteFile( cTmpFile );
          
end;

procedure InitializeWizard();
begin
  AddServersPage();
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    { Read custom value }
    MsgBox('Custom Value = ' + ServersPage.Values[0], mbInformation, MB_OK);
  end;
end;

[Run]
Filename: http://localhost/modharbour_samples/; Description: "Review mod_harbour samples"; Flags: postinstall shellexec
